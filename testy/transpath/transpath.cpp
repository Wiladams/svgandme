#pragma once

//#include <array>

#include "blend2d.h"
#include "pathsegmenter.h"
#include "pathcmdprinter.h"

using namespace waavs;


static void testPathPrinter()
{
	ByteSpan superCurve("M2216.3 2477.3c1.4 1 1.8 3 .8 4.4-.1.1-.1.2-.2.3 0 0 0 .1-.1.1-1.2 1.5-3.1 2.5-5.1 2.7-.1 0-.2 0-.4 0-.6.1-2.3-.2-3-.2-.2 0-.7-.1-.8-.1-.2 0-.7-.1-.8-.2-.3 0-1.3-.3-1.6-.4-1.3-.3-4.7-1.7-5.6-2.3-1-.6-3.9-1.9-4.9-2.5-1.8-1.2-7.6-4.1-9.3-5.5l-.7-.4c-.1 0-.4-.3-.4-.3-.1-.1-.4-.4-.4-.5-.1-.2-.2-.4-.3-.6-.4-.5-.8-1-1.1-1.5-.3-.5-.6-1.2-.7-1.8-.1-.7-.1-1.4.1-2.1.1-.5.6-.8 1.1-.7.4.1 1.3.6 1.2 1l0 0c0 .4.5.9.7 1.3.2.4.9.9 1.2 1.2.3.3 1.3.8 1.6 1.1l.5.3.5.3 1 .5c1.7 1.2 6.2 3 8 3.9.9.5 3.2 1.3 4.1 1.7.9.4 3 1 3.8 1.1.2 0 .6.1.8.1.1 0 .3 0 .4 0 .1 0 .3 0 .4 0 .4 0 1.2 0 1.6-.2.7-.3 2.4-.5 3-1C2212.6 2476 2215.5 2476.4 2216.3 2477.3zM2218.5 2467.5c1.6.7 2.4 2.6 1.8 4.2 0 .1-.1.2-.1.3 0 0 0 .1 0 .1-.9 1.7-2.8 2.8-4.7 2.7-.1 0-.3 0-.4-.1-.3.1-2.8-.8-3.2-.7-.1 0-.8-.2-.9-.2-.1 0-.8-.3-.9-.3-.2 0-1.6-.5-1.7-.6-.7-.2-5.7-2.2-6.2-2.4-.5-.3-5-2.1-5.4-2.4-.9-.6-9.8-4.4-10.7-5.1l-.8-.4c-.1-.1-.4-.2-.5-.4-.1-.1-.4-.4-.4-.6-.1-.2-.1-.5-.1-.7-.2-.3-.3-.6-.4-1-.1-.3-.2-.7-.1-1.1 0-.4.1-.8.3-1.1.1-.2.4-.4.8-.3.2 0 1.4.5 1.4.7l0 0c0 .2 1 .6 1.1.8.1.2 1.3.6 1.4.8.2.2 1.5.6 1.7.8l.5.2.5.2 1 .4c.9.6 7.1 2.5 8 2.9.5.2 3.6 1.1 4 1.3.5.2 3.2.9 3.6 1 .1 0 .7.1.8.1 0 0 .3.1.4.1 0 0 .3.1.4 0 .2 0 1.3.2 1.5.1.4-.1 2.7.1 3-.1C2214.5 2466.3 2218.1 2467 2218.5 2467.5zM2218.5 2466.1l-32.7-12.9c-.7-.3-1.1-1.1-.8-1.9.3-.7 1-1.1 1.7-.9l34 8.7c1.9.5 3.1 2.5 2.6 4.4s-2.5 3.1-4.4 2.6C2218.8 2466.2 2218.6 2466.2 2218.5 2466.1zM2222.4 2450.7c1.7.9 2.8 2.8 2.7 4.7 0 0 0 .1 0 .1-.3 1.9-1.8 3.2-3.7 3.1-.1 0-.3 0-.5-.1-.5.1-3.5-1.3-3.7-1.8 0 0-.2-.2-.2-.2-.1-.4-2.1-1.5-2.3-1.9-.1-.2-1.2-.7-1.3-.8 0 0-.3-.1-.3-.2 0 0-.3-.1-.3-.2-.1-.1-.6-.3-.7-.3-.4-.2-3-1.2-3.5-1.3-.5-.1-3.5-1.2-4-1.3-1-.2-7.1-2.3-8.2-2.3l-1-.3-.5-.1-.5-.1c-.2 0-1.6-.4-1.8-.4-.2 0-1.4-.3-1.6-.2-.2.1-1.3-.1-1.4 0l0 0c-.1.2-1.5-.2-1.7-.3-.3-.2-.5-.5-.5-.8 0-.4.1-.9.4-1.3.2-.4.5-.7.9-1 .4-.5 1.1-.7 1.7-.7.1 0 .9.1 1 .1.1 0 .6.1.7.1l.7.1 1.3.2c1.1-.1 9.7 1.9 10.8 1.9.6 0 4.9 1.1 5.4 1.1.6.1 5.3 1.3 6 1.5.2.1 1.5.4 1.6.5.1 0 .7.2.8.3.1 0 .7.3.8.3C2219.6 2449.6 2222.2 2450.4 2222.4 2450.7zM2224.8 2440.9c1.5 1.2 2.5 3.1 2.8 5 0 0 0 .1 0 .1.2 1.8-1.1 3.4-2.9 3.6-.2 0-.3 0-.5 0-1.1.1-3.3-1-3.6-2.1 0-.1-.1-.2-.1-.3-.1-.8-1.4-1.9-1.8-2.6-.2-.3-.9-.8-1.2-1.1-.1-.1-.2-.2-.3-.2-.1-.1-.3-.2-.3-.2-.2-.1-.6-.3-.7-.4-.7-.4-2.7-1.1-3.7-1.3-1-.2-3.3-.9-4.3-1.1-2.1-.3-6.7-1.5-8.8-1.5l-1.1-.1-.5-.1-.5-.1c-.5 0-1.5-.2-2-.1-.4.1-1.4 0-1.7.2-.3.2-1.1.3-1.3.6l0 0c-.3.4-1.4.3-1.8 0-.4-.3-.6-.8-.5-1.2.2-.7.6-1.3 1.2-1.8.5-.5 1.1-.9 1.8-1.1.5-.3 1.1-.5 1.7-.6.2 0 .7 0 .9 0 .1 0 .5 0 .7 0l.6 0 1.3 0c2.2-.2 8.1.8 10.3.9 1.1 0 4.1.6 5.2.8 1.1.1 4.4.9 5.7 1.4.3.1 1.2.4 1.5.6.2.1.6.3.7.4.1.1.6.3.7.4C2222.7 2439.6 2224.3 2440.4 2224.8 2440.9z");
	ByteSpan closedRect("M80.2,16.7 L80.2,422.4 L507.2,422.4 L507.2,16.7 L80.2,16.7 Z  h0.01");
	ByteSpan multiCircle("M 448.5,337 C 277.56787,337 139,475.56787 139,646.5 139,817.43213 277.56787,956 448.5,956 619.43213,956 758,817.43213 758,646.5 758,475.56787 619.43213,337 448.5,337 Z m 0,31 C 602.3113,368 727,492.6887 727,646.5 727,800.3113 602.3113,925 448.5,925 294.6887,925 170,800.3113 170,646.5 170,492.6887 294.6887,368 448.5,368 Z");
	ByteSpan doubleCircle("M105.75 517.27c-90.1-52-121-167.3-69-257.4s167.3-121 257.5-69c90.1 52 121 167.3 69 257.4-52.1 90.1-167.3 121-257.5 69zm239-79.7c46.2-80 18.8-182.2-61.2-228.3-80-46.2-182.2-18.8-228.3 61.2-46.2 79.9-18.8 182.2 61.2 228.3 79.9 46.2 182.1 18.8 228.3-61.2zm0 0c46.2-80 18.8-182.2-61.2-228.3-80-46.2-182.2-18.8-228.3 61.2-46.2 79.9-18.8 182.2 61.2 228.3 79.9 46.2 182.1 18.8 228.3-61.2z");
	ByteSpan wavy("M 10, 50Q 25, 25 40, 50t 30, 0 30, 0 30, 0 30, 0 30, 0");
	ByteSpan bigCIA("m2225.8 525.46h7.15 7.88 1.43c2.789-0.341 6.873 1.377 9.8 1.96l0.87 0.23 0.88 0.24 0.89 0.24c9.022 2.476 17.974 5.179 26.88 8.04l1.03 0.33 1.031 0.34 1.039 0.34c23.267 7.59 46.264 16.134 69.001 25.18l1.239 0.49 1.24 0.5 1.25 0.5c51.314 20.451 99.477 42.967 146.27 72.49l1.03 0.64 1.02 0.64 1.03 0.64 1.02 0.63c40.847 25.733 80.654 53.882 118.66 83.651l0.89 0.71 0.9 0.7c35.009 27.767 69.023 56.863 98.99 90.11l1.36 1.48 0.67 0.75 0.68 0.75 0.67 0.74 0.68 0.75c26.4 29.365 52.68 59.162 72.98 93.21l0.48 0.77 0.48 0.78c18.665 30.204 35.082 60.757 46.451 94.51l0.259 0.77 0.25 0.76 0.261 0.76 0.25 0.76c9.651 31.04 18.074 62.538 24.549 94.4l0.14 0.76 0.151 0.76c5.833 31.079 8.866 62.854 10.6 94.41l0.04 0.761 0.04 0.76 0.03 0.76 0.04 0.76 0.03 0.76 0.03 0.76 0.03 0.77 0.03 0.76c1.286 31.284-1.462 63.301-4.87 94.4l-0.09 0.76-0.101 0.76c-3.683 32.481-10.556 62.94-19.209 94.4l-0.2 0.77-0.201 0.76-0.2 0.76-0.21 0.76c-8.569 33.468-19.036 63.739-35.29 94.356l-0.4 0.758-0.399 0.759c-17.873 33.144-37.978 65.841-62.411 94.583l-1.86 2.211-1.24 1.472-0.63 0.736c-27.894 32.624-55.404 63.385-88.1 91.423l-0.82 0.721-0.83 0.723c-35.624 31.019-73.285 59.699-112.06 86.656l-0.97 0.671-0.96 0.669-0.97 0.67-0.97 0.669c-42.183 29.078-85.721 56.274-132.2 78.001l-1.24 0.584-1.24 0.583c-47.489 21.873-97.33 41.805-147.22 57.52l-0.99 0.305-0.99 0.302-0.97 0.298-1.95 0.587-0.959 0.29-0.961 0.286-0.95 0.282-0.95 0.279-0.94 0.278-0.94 0.272-0.93 0.271-0.93 0.266c-3.566 1.019-7.141 2.01-10.73 2.948l-0.85 0.224-0.86 0.221c-2.998 1.105-6.06 1.164-9.209 1.045h-2.151-20.04-2.15-42.95-2.15-88.76-2.15-180.38-2.15-363.64-2.14-730.14-8.59-8.589-1.432c-3.673 0.278-5.258-0.697-8.827-1.497l-0.863-0.228-0.87-0.231-0.875-0.234c-8.929-2.402-17.788-5.059-26.6-7.862l-1.02-0.325-1.025-0.329-1.029-0.332c-23.137-7.489-45.99-15.929-68.602-24.872l-1.235-0.489-1.238-0.492-1.24-0.494c-51.363-20.409-99.808-42.788-146.7-72.221l-2.057-1.271-1.026-0.638-1.025-0.638c-40.937-25.646-80.825-53.803-118.91-83.515l-0.898-0.703-0.896-0.705c-35.083-27.739-69.311-56.852-99.418-90.026l-0.682-0.745-0.681-0.744-1.358-1.49-0.676-0.746-0.676-0.744c-26.911-30.017-52.393-58.451-73.37-93.153l-0.964-1.55c-18.732-30.215-35.361-60.793-46.883-94.545l-0.262-0.76-0.261-0.76-0.258-0.76-0.257-0.76c-9.792-31.019-18.152-62.557-24.759-94.41l-0.148-0.76-0.146-0.76c-5.954-31.083-9.009-62.825-10.82-94.4l-0.039-0.76-0.038-0.76-0.037-0.76-0.037-0.77-0.035-0.76-0.034-0.76-0.033-0.76-0.033-0.76c-1.406-31.333 1.269-63.251 4.639-94.401l0.089-0.76 0.09-0.77c3.626-32.481 10.344-62.935 18.985-94.4l0.203-0.76 0.202-0.76 0.203-0.76 0.204-0.76c8.549-33.449 18.771-63.702 34.908-94.37l0.393-0.76 0.396-0.75c17.685-33.021 37.811-65.944 61.983-94.63l0.614-0.74 0.615-0.73 0.617-0.74 0.619-0.74 0.62-0.73 0.621-0.74c27.766-32.503 55.23-63.433 87.701-91.45l0.822-0.72 0.824-0.72c35.5-30.95 73.09-59.68 111.78-86.65l0.964-0.669 0.965-0.67 1.932-1.34c41.999-29.048 85.421-56.34 131.66-78.171l1.234-0.59 1.238-0.58c47.589-22.103 97.692-42.161 147.72-58.07l0.998-0.31 0.992-0.31 0.988-0.31 0.983-0.3 0.978-0.3 0.974-0.29 0.968-0.29 0.964-0.29 0.959-0.29 0.953-0.28 0.949-0.28 0.943-0.28 0.939-0.27c3.607-1.046 7.225-2.058 10.852-3.03l0.869-0.23 0.863-0.23c3.578-0.794 5.144-1.768 8.828-1.49h2.147 20.043 2.149 42.949 2.148 88.761 2.148 180.39 2.15 363.63 2.15 730.13 2.871 0.709 1.44z");
	
	PathCommandDispatch dispatch;
	PathCmdPrinter printer;

	dispatch.addSubscriber(printer);

	dispatch.parse(closedRect);
}


static void testPathSegmenter()
{
	// super long, lots of '-.1' stuff
	SVGPathSegmentIterator iter("M2216.3 2477.3c1.4 1 1.8 3 .8 4.4-.1.1-.1.2-.2.3 0 0 0 .1-.1.1-1.2 1.5-3.1 2.5-5.1 2.7-.1 0-.2 0-.4 0-.6.1-2.3-.2-3-.2-.2 0-.7-.1-.8-.1-.2 0-.7-.1-.8-.2-.3 0-1.3-.3-1.6-.4-1.3-.3-4.7-1.7-5.6-2.3-1-.6-3.9-1.9-4.9-2.5-1.8-1.2-7.6-4.1-9.3-5.5l-.7-.4c-.1 0-.4-.3-.4-.3-.1-.1-.4-.4-.4-.5-.1-.2-.2-.4-.3-.6-.4-.5-.8-1-1.1-1.5-.3-.5-.6-1.2-.7-1.8-.1-.7-.1-1.4.1-2.1.1-.5.6-.8 1.1-.7.4.1 1.3.6 1.2 1l0 0c0 .4.5.9.7 1.3.2.4.9.9 1.2 1.2.3.3 1.3.8 1.6 1.1l.5.3.5.3 1 .5c1.7 1.2 6.2 3 8 3.9.9.5 3.2 1.3 4.1 1.7.9.4 3 1 3.8 1.1.2 0 .6.1.8.1.1 0 .3 0 .4 0 .1 0 .3 0 .4 0 .4 0 1.2 0 1.6-.2.7-.3 2.4-.5 3-1C2212.6 2476 2215.5 2476.4 2216.3 2477.3zM2218.5 2467.5c1.6.7 2.4 2.6 1.8 4.2 0 .1-.1.2-.1.3 0 0 0 .1 0 .1-.9 1.7-2.8 2.8-4.7 2.7-.1 0-.3 0-.4-.1-.3.1-2.8-.8-3.2-.7-.1 0-.8-.2-.9-.2-.1 0-.8-.3-.9-.3-.2 0-1.6-.5-1.7-.6-.7-.2-5.7-2.2-6.2-2.4-.5-.3-5-2.1-5.4-2.4-.9-.6-9.8-4.4-10.7-5.1l-.8-.4c-.1-.1-.4-.2-.5-.4-.1-.1-.4-.4-.4-.6-.1-.2-.1-.5-.1-.7-.2-.3-.3-.6-.4-1-.1-.3-.2-.7-.1-1.1 0-.4.1-.8.3-1.1.1-.2.4-.4.8-.3.2 0 1.4.5 1.4.7l0 0c0 .2 1 .6 1.1.8.1.2 1.3.6 1.4.8.2.2 1.5.6 1.7.8l.5.2.5.2 1 .4c.9.6 7.1 2.5 8 2.9.5.2 3.6 1.1 4 1.3.5.2 3.2.9 3.6 1 .1 0 .7.1.8.1 0 0 .3.1.4.1 0 0 .3.1.4 0 .2 0 1.3.2 1.5.1.4-.1 2.7.1 3-.1C2214.5 2466.3 2218.1 2467 2218.5 2467.5zM2218.5 2466.1l-32.7-12.9c-.7-.3-1.1-1.1-.8-1.9.3-.7 1-1.1 1.7-.9l34 8.7c1.9.5 3.1 2.5 2.6 4.4s-2.5 3.1-4.4 2.6C2218.8 2466.2 2218.6 2466.2 2218.5 2466.1zM2222.4 2450.7c1.7.9 2.8 2.8 2.7 4.7 0 0 0 .1 0 .1-.3 1.9-1.8 3.2-3.7 3.1-.1 0-.3 0-.5-.1-.5.1-3.5-1.3-3.7-1.8 0 0-.2-.2-.2-.2-.1-.4-2.1-1.5-2.3-1.9-.1-.2-1.2-.7-1.3-.8 0 0-.3-.1-.3-.2 0 0-.3-.1-.3-.2-.1-.1-.6-.3-.7-.3-.4-.2-3-1.2-3.5-1.3-.5-.1-3.5-1.2-4-1.3-1-.2-7.1-2.3-8.2-2.3l-1-.3-.5-.1-.5-.1c-.2 0-1.6-.4-1.8-.4-.2 0-1.4-.3-1.6-.2-.2.1-1.3-.1-1.4 0l0 0c-.1.2-1.5-.2-1.7-.3-.3-.2-.5-.5-.5-.8 0-.4.1-.9.4-1.3.2-.4.5-.7.9-1 .4-.5 1.1-.7 1.7-.7.1 0 .9.1 1 .1.1 0 .6.1.7.1l.7.1 1.3.2c1.1-.1 9.7 1.9 10.8 1.9.6 0 4.9 1.1 5.4 1.1.6.1 5.3 1.3 6 1.5.2.1 1.5.4 1.6.5.1 0 .7.2.8.3.1 0 .7.3.8.3C2219.6 2449.6 2222.2 2450.4 2222.4 2450.7zM2224.8 2440.9c1.5 1.2 2.5 3.1 2.8 5 0 0 0 .1 0 .1.2 1.8-1.1 3.4-2.9 3.6-.2 0-.3 0-.5 0-1.1.1-3.3-1-3.6-2.1 0-.1-.1-.2-.1-.3-.1-.8-1.4-1.9-1.8-2.6-.2-.3-.9-.8-1.2-1.1-.1-.1-.2-.2-.3-.2-.1-.1-.3-.2-.3-.2-.2-.1-.6-.3-.7-.4-.7-.4-2.7-1.1-3.7-1.3-1-.2-3.3-.9-4.3-1.1-2.1-.3-6.7-1.5-8.8-1.5l-1.1-.1-.5-.1-.5-.1c-.5 0-1.5-.2-2-.1-.4.1-1.4 0-1.7.2-.3.2-1.1.3-1.3.6l0 0c-.3.4-1.4.3-1.8 0-.4-.3-.6-.8-.5-1.2.2-.7.6-1.3 1.2-1.8.5-.5 1.1-.9 1.8-1.1.5-.3 1.1-.5 1.7-.6.2 0 .7 0 .9 0 .1 0 .5 0 .7 0l.6 0 1.3 0c2.2-.2 8.1.8 10.3.9 1.1 0 4.1.6 5.2.8 1.1.1 4.4.9 5.7 1.4.3.1 1.2.4 1.5.6.2.1.6.3.7.4.1.1.6.3.7.4C2222.7 2439.6 2224.3 2440.4 2224.8 2440.9z");
	
	// the 'h0.01' after Z invalidates entire path
	//SVGPathSegmentIterator iter("M80.2,16.7 L80.2,422.4 L507.2,422.4 L507.2,16.7 L80.2,16.7 Z  h0.01");
	
	//SVGPathSegmentIterator iter("M 448.5,337 C 277.56787,337 139,475.56787 139,646.5 139,817.43213 277.56787,956 448.5,956 619.43213,956 758,817.43213 758,646.5 758,475.56787 619.43213,337 448.5,337 Z m 0,31 C 602.3113,368 727,492.6887 727,646.5 727,800.3113 602.3113,925 448.5,925 294.6887,925 170,800.3113 170,646.5 170,492.6887 294.6887,368 448.5,368 Z");
    //SVGPathSegmentIterator iter("M 10, 50Q 25, 25 40, 50t 30, 0 30, 0 30, 0 30, 0 30, 0");
	//SVGPathSegmentIterator iter("M105.75 517.27c-90.1-52-121-167.3-69-257.4s167.3-121 257.5-69c90.1 52 121 167.3 69 257.4-52.1 90.1-167.3 121-257.5 69zm239-79.7c46.2-80 18.8-182.2-61.2-228.3-80-46.2-182.2-18.8-228.3 61.2-46.2 79.9-18.8 182.2 61.2 228.3 79.9 46.2 182.1 18.8 228.3-61.2zm0 0c46.2-80 18.8-182.2-61.2-228.3-80-46.2-182.2-18.8-228.3 61.2-46.2 79.9-18.8 182.2 61.2 228.3 79.9 46.2 182.1 18.8 228.3-61.2z");
    
	SVGSegmentParseState seg;
    while (iter.nextSegment(seg))
    {
        printf("%c ", seg.fSegmentKind);
        int n = strlen(seg.fArgTypes);
        switch (n) {
        case 7:
            printf("%3.2f, ", seg.args[n - 7]);
        case 6:
            printf("%3.2f, ", seg.args[n - 6]);
        case 5:
            printf("%3.2f, ", seg.args[n - 5]);
        case 4:
            printf("%3.2f, ", seg.args[n - 4]);
        case 3:
            printf("%3.2f, ", seg.args[n - 3]);
        case 2:
            printf("%3.2f, ", seg.args[n - 2]);
        case 1:
            printf("%3.2f ", seg.args[n - 1]);
        default:
            printf("\n");
        }
    }
}


int main(int argc, char** argv)
{
	testPathSegmenter();
	//testPathPrinter();

	return 0;
}
